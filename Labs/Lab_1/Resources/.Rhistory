data <- read.csv("heart_attack.csv")
data <- read.csv("Heart_Attack.csv")
getwd()
setwd("C:/Users/Lenovo/Documents/University of Windsor/Term 2/COMP 8157 - Advance Database Topics/Labs/Lab1")
data <- read.csv("heart_attack.csv")
getwd()
data <- read.csv("Heart_Attack.csv")
setwd("C:/Users/Lenovo/Documents/University of Windsor/Term 2/COMP 8157 - Advance Database Topics/Labs/Lab1/Resources")
data <- read.csv("Heart_Attack.csv")
summary(data)
dim(data)
str(data)
class_var <- data$class
data$class
sum(is.na(data))
plot(data$chol, data$age, xlab = "Cholesterol", ylab = "Age", main = "Scatter Plot of Cholesterol and Age")
points(data$chol, data$age, col = "blue")
hist(data$cp, breaks = seq(min_cp, max_cp, 1), main = "Chest Pain Type", xlab = "")
clear
cls
clr
# 2. summary of data
summary(data)
# 3. structure of data
str(data)
# 3. dimension of data
dim(data)
# 5. Column names of dataset.
colnames(data)
class_var <- data$class
class(class_var)
#There is no class variable/column in the provided dataset
class_var <- data$cass
#There is no class variable/column in the provided dataset
class_var <- data$cass
#There is no class variable/column in the provided dataset
class_var <- data$caa
class(class_var)
# 7. Datatype of output variable - integer
class(class_var)
data$class <- as.factor(data$output)
data$class
# 9. Sum of missing values
sum(is.na(data))
# 9. Sum of missing values
print("Sum of missing values:")
sum(is.na(data))
colSums(is.na(data))
# 11. Replace missing values
data[is.na(data)] <- 0
# 11. Check if values replaced - should return 0
sum(is.na(data))
# 12. Rename the sex attribute
data$sex <- ifelse(data$sex == 0, "Male", "Female")
data$sex
# 7. Datatype of output variable - integer
class(data$output)
# 13. scatter plot between cholestrol and age.
plot(data$chol, data$age, xlab = "Cholesterol", ylab = "Age", main = "Scatter Plot of Cholesterol and Age")
# 13. scatter plot between cholestrol and age.
plot(data$chol, data$age, xlab = "Cholesterol", ylab = "Age", main = "Scatter Plot of Cholesterol and Age")
points(data$chol, data$age, col = "blue")
points(data$chol, data$age, col = "red",pch=6)
points(data$chol, data$age, col = "red",pch=6,cex=6)
points(data$chol, data$age, col = "red",pch=6,cex=2)
points(data$chol, data$age, col = "red",pch=6)
points(data$chol, data$age, col = "red",pch=6)
# 13. scatter plot between cholestrol and age.
plot(data$chol, data$age, xlab = "Cholesterol", ylab = "Age", main = "Scatter Plot of Cholesterol and Age")
#points(data$chol, data$age, col = "blue")
points(data$chol, data$age, col = "red",pch=6)
#points(data$chol, data$age, col = "blue")
points(data$chol, data$age, col = 1:3,pch=6)
points(data$chol, data$age, col = "blue")
points(data$chol, data$age, col = "red",pch=6)
# 13. scatter plot between cholestrol and age.
plot(data$chol, data$age, xlab = "Cholesterol", ylab = "Age", main = "Scatter Plot of Cholesterol and Age")
points(data$chol, data$age, col = "blue")
points(data$chol, data$age, col = "red",pch=6)
ggplot(data, aes(x=sex, y=chol)) + geom_point()
library(ggplot2)
ggplot(data, aes(x=sex, y=chol)) + geom_point()
ggplot(data, aes(x=sex, y=chol,color=output)) + geom_point()
barplot(table(data$age), main = "Age distribution", xlab = "Age", ylab = "Frequency", col = "blue")
min_cp <- min(data$cp)
max_cp <- max(data$cp)
hist(data$cp, breaks = seq(min_cp, max_cp, 1), main = "Chest Pain Type", xlab = "")
hist(data$cp, breaks = seq(min_cp, max_cp, 1), main = "Chest Pain Type")
boxplot(table(data$age))
which(is.na(data))
plot(data)
plot(data)
pairs(data)
pairs(data)
plot(data)
plot(data)
# 14. ggplot
#library imported above
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point()
# 14. ggplot
#library imported above
ggplot(data, aes(x=age, y=chol,color=output)) + geom_abline()
# 14. ggplot
#library imported above
ggplot(data, aes(x=age, y=chol,color=output)) + geom_area()
# 14. ggplot
#library imported above
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point(shape=15, fill="blue", color="darkred")
# 14. ggplot
#library imported above
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point(shape=15, color="darkred")
# 14. ggplot
#library imported above
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point(shape=15, color="blue")
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point()
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point(shape=15, color="blue")
ggplot(data, aes(x=age, y=chol)) + geom_point(shape=15, color="blue")
barplot(table(data$age), main = "Age distribution", xlab = "Age", ylab = "Frequency", col = "blue")
ggplot(data, aes(x=age, y=chol)) + geom_point(shape=15, color="blue")
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point(shape=15)
# b and c - histogram
hist(data$cp, breaks = seq(min_cp, max_cp, 1), main = "Chest Pain Type",col="red")
# b and c - histogram
hist(data$cp, breaks = seq(min_cp, max_cp, 1), xlab="Chest pain",ylab="Frequency",main = "Chest Pain Type",col="red")
# 1. import data
data <- read.csv("Heart_Attack.csv")
# 2. summary of data
# It gives information about all the columns/variables such as min. value of each column, max. value, mean, median, etc.
summary(data)
# 3. structure of data
# It explains the structure of data; the number of columns/variables in data and the number of observations with data types with possible values.
str(data)
# 3. dimension of data
# Gives the dimension of data; number of rows/observations and columns/variables
dim(data)
# 4. First 8 rows
head(data, 8)
# 4. Last 5 rows
tail(data, 5)
# 5. Column names of dataset.
colnames(data)
# 6. Class Variable is output.
class_var <- data$output
# 7. Datatype of output variable - integer
class(class_variable)
# 6. Class Variable is output.
class_variable <- data$output
# 7. Datatype of output variable - integer
class(class_variable)
source("C:/Users/Lenovo/Documents/University of Windsor/Term 2/COMP 8157 - Advance Database Topics/Labs/Lab1/lab1_hamza_baig.R")
# 7. Datatype of output variable - integer
class(class_variable)
# 8. Change data type of output to factor
data$class <- as.factor(data$output)
# 8. Show output
data$class
# 9. Sum of missing values
print("Sum of missing values:")
sum(is.na(data))
# 1. import data
data <- read.csv("Heart_Attack.csv")
# 2. summary of data
# It gives information about all the columns/variables such as min. value of each column, max. value, mean, median, etc.
summary(data)
# 3. structure of data
# It explains the structure of data; the number of columns/variables in data and the number of observations with data types with possible values.
str(data)
# 3. dimension of data
# Gives the dimension of data; number of rows/observations and columns/variables
dim(data)
# 4. First 8 rows
head(data, 8)
# 4. Last 5 rows
tail(data, 5)
# 5. Column names of dataset.
colnames(data)
# 6. Class Variable is output.
class_variable <- data$output
# 7. Datatype of output variable - integer
class(class_variable)
# 8. Change data type of output to factor
data$class <- as.factor(data$output)
# 8. Show output
data$class
# 9. Sum of missing values
print("Sum of missing values:")
sum(is.na(data))
# 10. Sum of missing values for each column/variable
colSums(is.na(data))
# 11. Replace missing values
data[is.na(data)] <- 0
# 11. Check if values replaced - should return 0
sum(is.na(data))
source("C:/Users/Lenovo/Documents/University of Windsor/Term 2/COMP 8157 - Advance Database Topics/Labs/Lab1/lab1_hamza_baig.R")
# 11. Replace missing values
data[is.na(data)] <- 0
# 11. Check if values replaced - should return 0
sum(is.na(data))
# 12. Rename the sex attribute
data$sex <- ifelse(data$sex == 0, "Male", "Female")
# 12. Check if renamed (0 to Male and 1 to Female)
data$sex
# 1. import data
data <- read.csv("Heart_Attack.csv")
# 2. summary of data
# It gives information about all the columns/variables such as min. value of each column, max. value, mean, median, etc.
summary(data)
# 3. structure of data
# It explains the structure of data; the number of columns/variables in data and the number of observations with data types with possible values.
str(data)
# 3. dimension of data
# Gives the dimension of data; number of rows/observations and columns/variables
dim(data)
# 4. First 8 rows
head(data, 8)
# 4. Last 5 rows
tail(data, 5)
# 5. Column names of dataset.
colnames(data)
# 6. Class Variable is output.
class_variable <- data$output
# 7. Datatype of output variable - integer
class(class_variable)
# 8. Change data type of output to factor
data$class <- as.factor(data$output)
# 8. Show output
data$class
# 9. Sum of missing values
print("Sum of missing values:")
sum(is.na(data))
# 10. Sum of missing values for each column/variable
colSums(is.na(data))
# 11. Replace missing values
data[is.na(data)] <- 0
# 11. Check if values replaced - should return 0
sum(is.na(data))
# 12. Rename the sex attribute
data$sex <- ifelse(data$sex == 0, "Male", "Female")
# 12. Check if renamed (0 to Male and 1 to Female)
data$sex
# 13. scatter plot between cholestrol and age.
plot(data$chol, data$age, xlab = "Cholesterol", ylab = "Age", main = "Scatter Plot of Cholesterol and Age")
# 13. a
points(data$chol, data$age, col = "blue")
# 13. b
points(data$chol, data$age, col = "red",pch=6)
# 13. scatter plot between cholestrol and age.
plot(data$chol, data$age, xlab = "Cholesterol", ylab = "Age", main = "Scatter Plot of Cholesterol and Age")
# 13. a
points(data$chol, data$age, col = "blue")
# 13. b
points(data$chol, data$age, col = "red",pch=6)
# 14. ggplot
# library imported above
# Plot between age and cholestrol, based on output.
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point(shape=15)
# 15. Barplot
barplot(table(data$age), main = "Age distribution", xlab = "Age", ylab = "Frequency", col = "blue")
# 16. Histogram for chest pain
# a. Minimum and maximum
minimum_cp <- min(data$cp)
maximum_cp <- max(data$cp)
# b and c - histogram
hist(data$cp, breaks = seq(minimum_cp, maximum_cp, 1), xlab="Chest pain",ylab="Frequency",main = "Chest Pain Type",col="red")
# 17. Boxplot for age
boxplot(table(data$age))
# 17. Boxplot for age
boxplot(table(data$age),main="Age distribution", xlab="Age",ylab="Frequency")
# 17. Boxplot for age
boxplot(age~output,table(data$age),main="Age distribution", xlab="Age",ylab="Frequency")
# 17. Boxplot for age
boxplot(table(data$age),main="Age distribution", xlab="Age",ylab="Frequency")
# 17. Boxplot for age
boxplot(table(data$age),main="Age distribution", xlab="Age",ylab="Frequency",horizontal = TRUE)
# 17. Boxplot for age
boxplot(table(data$age),main="Age distribution", xlab="Age",ylab="Frequency")
# 17. Boxplot for age
boxplot(data$age,main="Age distribution", xlab="Age",ylab="Frequency")
# 15. Barplot
barplot(data$age, main = "Age distribution", xlab = "Age", ylab = "Frequency", col = "blue")
table(
data
# 15. Barplot
barplot(table(data$age), main = "Age distribution", xlab = "Age", ylab = "Frequency", col = "blue")
# 14. ggplot
# library imported above
# Plot between age and cholestrol, based on output.
ggplot(data, aes(x=age, y=chol,color=output)) + geom_point(shape=15)
# 15. Barplot
barplot(table(data$age), main = "Age distribution", xlab = "Age", ylab = "Frequency", col = "blue")
# 17. Boxplot for age
boxplot(data$age,main="Age distribution", xlab="Age",ylab="Frequency")
# 18. Correlation plot between all the outputs.
plot(data)
# 18. Correlation plot between all the outputs.
plot(data)
# 17. Boxplot for age
boxplot(data$age,main="Age distribution", xlab="Age",ylab="Frequency")
# 18. Correlation plot between all the outputs.
plot(data)
